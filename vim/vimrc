" -----
" VIMRC
" -----
scriptencoding utf-8

" Setup junegunn/vim-plug
call plug#begin('~/.vim/plugged')

" Manage Plugins
Plug 'Lokaltog/vim-easymotion'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
Plug 'justinj/vim-react-snippets'
Plug 'airblade/vim-gitgutter'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'chriskempson/tomorrow-theme', { 'rtp': 'vim/' }
Plug 'elzr/vim-json',               { 'for': 'json' }
Plug 'fatih/vim-go',                { 'for': 'go' }
Plug 'honza/dockerfile.vim',        { 'for': 'dockerfile' }
Plug 'jceb/vim-orgmode',            { 'for': 'org' }
Plug 'jmcantrell/vim-virtualenv'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'junegunn/vim-easy-align',     { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
Plug 'junegunn/vim-journal',        { 'for': 'journal' }
Plug 'junegunn/vim-peekaboo'
Plug 'kchmck/vim-coffee-script',    { 'for': 'coffee' }
"Plug 'ludovicchabant/vim-gutentags'
Plug 'majutsushi/tagbar'
Plug 'mattn/webapi-vim' | Plug 'mattn/gist-vim'
Plug 'mfukar/robotframework-vim',   { 'for': 'robot' }
Plug 'mxw/vim-jsx',                 { 'for': 'jsx'}
Plug 'myusuf3/numbers.vim'
Plug 'pangloss/vim-javascript',     { 'for': 'javascript' }
Plug 'rking/ag.vim'
Plug 'scrooloose/syntastic'
Plug 'sjl/gundo.vim'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-liquid'
Plug 'tpope/vim-markdown',          { 'for': 'markdown' }
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/utl.vim'
Plug 'digitaltoad/vim-pug'

" End setup of junegunn/vim-plug
call plug#end()
filetype plugin indent on
syntax enable

" GUI
set guioptions-=r
set guioptions-=m
set guioptions-=L
set guioptions-=T
set number
set norelativenumber
set colorcolumn=81
set textwidth=80
set visualbell
set list listchars=tab:▸\ ,trail:·,extends:»,precedes:«
set columns=100                        " set width of floating window.
set lines=67                           " set height of floating window.
set cmdheight=1                        " set command window to hieght of 1.
set scrolloff=5                        " set offset on zt

" Indentation
set expandtab
set tabstop=4
set shiftwidth=4
set nowrap
set smartindent
set autoindent
set nosmarttab

" Search
set incsearch
set hlsearch
set ignorecase

" Behaviors
set backspace=2                        " delete over linebreaks
set whichwrap+=<,>,h,l,[,]             " movements over linebreaks
set report=0                           " count lines yanked/deleted
let g:mapleader = ","
set foldmethod=indent                  " fold based on indent
set nofoldenable                       " don't fold by default
au FileType org setlocal foldenable    " enable fold for org-mode
set foldlevel=1                        " only close/open one foldlevel at a time
augroup view
autocmd BufWinLeave * silent! mkview   " save view when closing buffer
autocmd BufWinEnter * silent! loadview " load view when opening buffer
augroup END

" Mappings
                                       " change pwd to file location.
nnoremap ,cd :cd %:p:h<CR>:pwd<CR>
                                       " move visual block
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
                                       " search lint errors
nnoremap <silent> <m-p> :lprevious <CR>
nnoremap <silent> <m-n> :lnext <CR>

if has("win32")                        " open .vimrc & then load.
    nmap <leader>v :e $myvimrc
    nmap <leader>s :so $myvimrc
else
    nmap <leader>v :e $MYVIMRC
    nmap <leader>s :so $MYVIMRC
endif
                                       " format json in current buffer or selection
map <Leader>n :%!python -m json.tool<CR>

" Backup Files [Disabled]
set nobackup                           " do not keep backups after close
set nowritebackup                      " do not keep a backup while working
"set backupdir=$HOME/.vim/backup        " store backups under ~/.vim/backup
"set backupcopy=yes                     " keep attributes of original file
"set backupskip=/tmp/*,$TMPDIR/*,$TMP/*,$TEMP/*

" Swap Files [Disabled]
set noswapfile                         " don't keep swp files either
"set directory=~/.vim/swap,~/tmp,.      " keep swp files under ~/.vim/swap

" Powerline (TODO deprecate for airline)
set laststatus=2
set rtp+=/home/drobati/.local/lib/python2.7/site-packages/powerline/bindings/vim

" Style
set t_Co=256                           " XTerm 256 color support.
if has('gui_running')
    set macligatures
    set guifont=Fira\ Code:h12
    "set guifont=DejaVu\ Sans\ Mono\ 10
else
    set guifont=DejaVu\ Sans\ Mono\ 10
endif
colorscheme Tomorrow-Night-Eighties
let g:airline_theme='tomorrow'

" -------------------------
" LANGUAGE SPECIFIC OPTIONS
" -------------------------

au BufNewFile,BufRead VagrantFile* set filetype=ruby
au BufNewFile,BufRead Dockerfile*  set filetype=dockerfile
au BufNewFile,BufRead *.journal    set filetype=journal
au BufNewFile,BufRead *.md         set filetype=markdown

" C++
set tags=./tags;/

" -----------------------
" PLUGIN SPECIFIC OPTIONS
" -----------------------

" Airline
let g:airline_left_sep = ' '
let g:airline_right_sep = ' '

" EasyAlign
vmap <Enter> <Plug>(EasyAlign)

" EasyMotion
let g:EasyMotion_do_mapping = 0       " Disable default mappings
nmap s <Plug>(easymotion-bd-w)
nmap t <Plug>(easymotion-t2)
map  / <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)
let g:EasyMotion_startofline      = 0  " keep cursor column when JK motion
let g:EasyMotion_smartcase        = 1  " type `l` and match `l`&`L`
let g:EasyMotion_use_smartsign_us = 1  " type `3` and match `3`&`#`

" Gist
"" sudo apt-get install xclip
let g:gist_clip_command            = 'xclip -selection clipboard'
let g:gist_detect_filetype         = 1
let g:gist_open_browser_after_post = 1
let g:gist_browser_command         = 'firefox %URL%'
let g:gist_show_privates           = 1
let g:gist_post_private            = 1

" Syntastic
let g:syntastic_check_on_open   = 1
let g:syntastic_error_symbol    = 'X'
let g:syntastic_warning_symbol  = '!'
let g:syntastic_auto_loc_list   = 2
let g:syntastic_loc_list_height = 5

" Fugitive
nnoremap <leader>gs :Gstatus<cr>

" Tagbar
nnoremap <F8> :TagbarToggle<CR>

" Gundo
nnoremap <F5> :GundoToggle<CR>

" Ultisnips
let g:UltiSnipsExpandTrigger       = "<tab>"
let g:UltiSnipsJumpForwardTrigger  = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
let g:UltiSnipsEditSplit           = "vertical"
let g:ultisnips_python_style       = "google"

" jsx
let g:jsx_ext_required = 0

" Others
function! s:goyo_enter()
  NumbersDisable
  set nonumber
  set norelativenumber
  colorscheme Tomorrow
endfunction

function! s:goyo_leave()
  set number
  set norelativenumber
  NumbersEnable
  colorscheme Tomorrow-Night-Eighties
endfunction

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()
